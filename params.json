{"name":"Dronetest.io","tagline":"Autopilot hardware testing with Teutonic thoroughness.","body":"### Welcome to automated testing!\r\nDronetest is a set of Ruby scripts which execute per-commit and per-pull-request tests on real autopilot hardware. It uses [Hans-CI](http://github.com/hanssaurer/px4test) to apply teutonic thoroughness. In addition, it supports long-term soak tests on selected branches (e.g. stable or master). It supports Mac OS and tiny Linux computers such as the [Intel Compute Stick](http://www.intel.com/content/www/us/en/compute-stick/intel-compute-stick.html). After installing the prerequisites according to the [README.md](https://github.com/hanssaurer/px4test/tree/master/README.md), the test harness can be put to use with just very few commands:\r\n\r\n```\r\n$ git clone https://github.com/hanssaurer/px4test.git\r\n$ cd px4test\r\n$ # Create the config.txt according to the README.md instructions\r\n$ ./run.sh # For a quick test\r\n$ # Or add watchdog.sh as a cron-job entry which will auto-update the script.\r\n```\r\n\r\n### Testing Output\r\nThe system generates a HTML report available for download and sends a summary via email. The report includes the console output of the autopilot and a GIF showing the led pattern ([example report](http://results.dronetest.io/zurich01/10/index.html)).\r\n\r\n### TODO\r\n\r\n  * Stack dump / crash detection\r\n  * GDB / JTAG readout, parsing and reporting\r\n  * Runtime statistics for specific branches / commits to help bisection a bit (correlation assumptions..)\r\n\r\n### Authors and Contact\r\nHans Saurer (@hanssaurer), Lorenz Meier (@LorenzMeier).","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}